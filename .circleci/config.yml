# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
    build:
        docker:
        # Specify the version you desire here
        - image: circleci/php:7.3-node-browsers

        # Specify service dependencies here if necessary
        # CircleCI maintains a library of pre-built images
        # documented at https://circleci.com/docs/2.0/circleci-images/
        # Using the RAM variation mitigates I/O contention
        # for database intensive operations.
        # - image: circleci/mysql:5.7-ram
        #
        # - image: redis:2.8.19

        steps:
        - checkout

        - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
        - run: sudo docker-php-ext-install zip

        # Download and cache dependencies
        - restore_cache:
            keys:
                # "composer.lock" can be used if it is committed to the repo
                - v1-dependencies-{{ checksum "code/composer.json" }}
                # fallback to using the latest cache if no exact match is found
                - v1-dependencies-

        - run: 
            working_directory: code
            command: composer install -n --prefer-dist

        - run:
            working_directory: code
            command: |
                echo ${ENV_FILE_TEST} >> base64env_test.txt
                base64 -d base64env_test.txt >> .env.testing

        - save_cache:
            key: v1-dependencies-{{ checksum "code/composer.json" }}
            paths:
                - ./vendor
        - restore_cache:
            keys:
                - node-v1-{{ checksum "code/package.json" }}
                - node-v1-
        - run:
            working_directory: code
            command: yarn install
        - save_cache:
            key: node-v1-{{ checksum "code/package.json" }}
            paths:
                - node_modules

        # prepare the database
        - run:
            working_directory: code
            command: touch storage/testing.sqlite
        - run:
            working_directory: code
            command: php artisan migrate --env=testing --database=sqlite_testing --force

        # run tests with phpunit or codecept
        - run:
            working_directory: code
            command: ./vendor/bin/phpunit
        # - run: ./vendor/bin/codecept build
        # - run: ./vendor/bin/codecept run

    build_image:
        docker:
            - image: docker:18.09.0
        steps:
            - checkout
            - setup_remote_docker
            - run:
                command: |
                    apk add --no-cache --update py-pip
                    pip install awscli 
            - run:
                command: |
                    $(aws ecr get-login --no-include-email --region ap-northeast-1)
            - run:
                working_directory: code
                command: |
                    echo ${ENV_FILE} >> base64env.txt
                    base64 -d base64env.txt >> .env
            - run:
                working_directory: code
                command: |
                    docker build -t ${ECR_DOMAIN_PHP}:$CIRCLE_SHA1 -t ${ECR_DOMAIN_PHP}:latest .
            - run:
                command: |
                    docker push ${ECR_DOMAIN_PHP}:$CIRCLE_SHA1
                    docker push ${ECR_DOMAIN_PHP}:latest
            - run:
                command: |
                    docker build -t ${ECR_DOMAIN_NGINX}:$CIRCLE_SHA1 -t ${ECR_DOMAIN_NGINX}:latest -f nginx/Dockerfile .
            - run:
                command: |
                    docker push ${ECR_DOMAIN_NGINX}:$CIRCLE_SHA1
                    docker push ${ECR_DOMAIN_NGINX}:latest


workflows:
    version: 2
    test:
        jobs:
            - build
            - build_image:
                requires:
                    - build
                filters:
                    branches:
                        only:
                            - main
                            - prd-setting
